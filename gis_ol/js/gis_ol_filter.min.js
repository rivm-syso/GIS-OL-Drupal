var Filters={ 'types': { 'string': { 'name': 'string', 'fields': ['gis_ol_f_'], 'subtypes': ['=','like'], 'getEdit': function(veld_no,deflt_subtype) {return '';}, 'getHTML': function(veld,map_id,layer_no,veld_no,subfilter,waarden) { if (typeof(waarden)=='undefined') {waarden=[''];} return '<tr><td>'+veld+' '+(subfilter[0]=='='?'=':'bevat')+'</td><td><input id="gis_ol_f_'+map_id+'_'+layer_no+'_'+veld_no+'" size="12" value="'+waarden[0]+'" onblur="Filters.toepassen('+map_id+','+layer_no+','+veld_no+');"></td></tr>'; }, 'getFilter': function(veld,subfilter,waarden) { if (typeof(waarden)=='undefined' || waarden[0]=='') {return '';} if (subfilter[0]=='=') return 'strToLowerCase('+veld+')=\''+waarden[0].toLowerCase()+'\''; return 'strToLowerCase('+veld+') like \'%'+waarden[0].toLowerCase()+'%\''; }, }, 'number': { 'name': 'number', 'fields': ['gis_ol_f_','gis_ol_f2_'], 'subtypes': ['=','<','<=','>','>=','range'], 'getEdit': function(veld_no,deflt_subtype) { if (deflt_subtype=='') {deflt_subtype=['','','',''];} return ' Min: <input id="gis_ol_veld_filter2_'+veld_no+'" size="4" value="'+deflt_subtype[1]+'"> Max: <input id="gis_ol_veld_filter3_'+veld_no+'" size="4" value="'+deflt_subtype[2]+'"> Step: <input id="gis_ol_veld_filter4_'+veld_no+'" size="4" value="'+deflt_subtype[3]+'">'; }, 'getHTML': function(veld,map_id,layer_no,veld_no,subfilter,waarden) { if (typeof(waarden)=='undefined') {waarden=['',''];} var txt=Filters.subtypeString(subfilter[0]),b=''; if (subfilter[0]=='range') {b=' t/m <input id="gis_ol_f2_'+map_id+'_'+layer_no+'_'+veld_no+'" style="width: 60px;" value="'+waarden[1]+'" onblur="Filters.toepassen('+map_id+','+layer_no+','+veld_no+');" type="number"'+(subfilter[1]==''?'':' min="'+subfilter[1]+'"')+(subfilter[2]==''?'':' max="'+subfilter[2]+'"')+(subfilter[3]==''?'':' step="'+subfilter[3]+'"')+'>';} return '<tr><td>'+veld+' '+txt+'</td><td><input id="gis_ol_f_'+map_id+'_'+layer_no+'_'+veld_no+'" style="width: 60px;" value="'+waarden[0]+'" onblur="Filters.toepassen('+map_id+','+layer_no+','+veld_no+');" type="number"'+(subfilter[1]==''?'':' min="'+subfilter[1]+'"')+(subfilter[2]==''?'':' max="'+subfilter[2]+'"')+(subfilter[3]==''?'':' step="'+subfilter[3]+'"')+'>'+b+'</td></tr>'; }, 'getFilter': function(veld,subfilter,waarden) { if (typeof(waarden)=='undefined' || (waarden[0]=='' && waarden[1]=='')) {return '';} if (subfilter[0]=='range') { if (waarden[0]=='') {return veld+'<='+waarden[1];} if (waarden[1]=='') {return veld+'>='+waarden[0];} return veld+'>='+waarden[0]+' AND '+veld+'<='+waarden[1]; } return veld+subfilter[0]+waarden[0]; }, }, 'date': { 'name': 'date', 'fields': ['gis_ol_f_','gis_ol_f2_'], 'subtypes': ['=','<','<=','>','>=','range'], 'getEdit': function(veld_no,deflt_subtype) {return '';}, 'getHTML': function(veld,map_id,layer_no,veld_no,subfilter,waarden) { if (typeof(waarden)=='undefined') {waarden=['',''];} var txt=Filters.subtypeString(subfilter[0]),b=''; if (subfilter[0]=='range') {b=' t/m <input id="gis_ol_f2_'+map_id+'_'+layer_no+'_'+veld_no+'" type="date" value="'+waarden[1]+'" onblur="Filters.toepassen('+map_id+','+layer_no+','+veld_no+');" type="number">';} return '<tr><td>'+veld+' '+txt+'</td><td><input id="gis_ol_f_'+map_id+'_'+layer_no+'_'+veld_no+'" type="date" value="'+waarden[0]+'" onblur="Filters.toepassen('+map_id+','+layer_no+','+veld_no+');" type="number">'+b+'</td></tr>'; }, 'getFilter': function(veld,subfilter,waarden) { if (typeof(waarden)=='undefined' || (waarden[0]=='' && waarden[1]=='')) {return '';} if (subfilter[0]=='range') { if (waarden[0]=='') {return veld+'<=\''+waarden[1]+'\'';} if (waarden[1]=='') {return veld+'>=\''+waarden[0]+'\'';} return veld+'>=\''+waarden[0]+'\' AND '+veld+'<=\''+waarden[1]+'\''; } return veld+subfilter[0]+'\''+waarden[0]+'\''; }, }, }, getTypes: function(row,deflt_type,deflt_subtype) { var r='<select id="gis_ol_veld_filter_'+row+'" onchange="jQuery(\'#gis_ol_veld_filterD_'+row+'\').html(Filters.getEditDiv('+row+',this.value,\'\'));"><option></option>'; for (var key in this.types) {r+='<option'+(key==deflt_type?' selected="selected"':'')+'>'+ key+'</option>';} return r+'</select><div id="gis_ol_veld_filterD_'+row+'" style="display: inline-block;">'+this.getEditDiv(row,deflt_type,deflt_subtype)+'</div>'; }, getSubTypes: function(row,deflt_type,deflt_subtype) { if (typeof(deflt_type)=='undefined') {return'';} var r=' <select id="gis_ol_veld_filter1_'+row+'">',v; for (var t=0;t<this.types[deflt_type].subtypes.length;t++) {v=this.types[deflt_type].subtypes[t]; r+='<option'+(v==deflt_subtype[0]?' selected="selected"':'')+'>'+v+'</option>';} return r+'</select>'; }, getEditDiv: function(row,deflt_type,deflt_subtype) { if (typeof(deflt_type)=='undefined') {return'';} return (deflt_type==''?'':this.getSubTypes(row,deflt_type,deflt_subtype)+this.types[deflt_type].getEdit(row,deflt_subtype)); }, subtypeString: function(s) { return (s=='range'?'van':s); }, toepassen_: function(map_id,layer_no) { var dataVelden=GIS_ol_maps[map_id].layers_def[layer_no]['dataVelden'],t, filter, f='', f1, t1, dv; for (t=0;t<dataVelden.length;t++) if (dataVelden[t].filter!='') { if (dataVelden[t].filter=='fromFilter') { dv=GIS_ol_maps[map_id].layers_def[dataVelden[t].filterA].dataVelden[dataVelden[t].filterB]; filter=Filters.types[dv.filter]; f1=filter.getFilter(dv.veld,dv.subfilter,dv.waarden); } else { filter=Filters.types[dataVelden[t].filter]; dataVelden[t].waarden=[]; for (t1=0;t1<filter.fields.length;t1++) { dataVelden[t].waarden[t1]=jQuery('#'+filter.fields[t1]+map_id+'_'+layer_no+'_'+t).val(); } f1=filter.getFilter(dataVelden[t].veld,dataVelden[t].subfilter,dataVelden[t].waarden); } if (f1!='') { f+=(f==''?'':' AND ')+f1; } } return f==''?false:f; }, toepassen: function(map_id,layer_no,veld_no) { var checkSameField=GIS_ol_maps[map_id].fg>=1; var f=this.toepassen_(map_id,layer_no); if (f) { GIS_ol_maps[map_id].layers[layer_no].getSource().updateParams({cql_filter: f}); } else { delete GIS_ol_maps[map_id].layers[layer_no].getSource().getParams().cql_filter; GIS_ol_maps[map_id].layers[layer_no].getSource().updateParams({}); } if (checkSameField) { var t, t1, dataVelden; for (t=layer_no+1;t<GIS_ol_maps[map_id].layers_def.length;t++) { dataVelden=GIS_ol_maps[map_id].layers_def[t]['dataVelden']; for (t1=0;t1<dataVelden.length;t1++) if (dataVelden[t1].filter=='fromFilter') { f=this.toepassen_(map_id,t); if (f) { GIS_ol_maps[map_id].layers[t].getSource().updateParams({cql_filter: f}); } else { delete GIS_ol_maps[map_id].layers[t].getSource().getParams().cql_filter; GIS_ol_maps[map_id].layers[t].getSource().updateParams(); } t1=dataVelden.length; } } } }, reset:function(map_id) { jQuery('[id^=gis_ol_f_'+map_id+'_]').val(''); jQuery('[id^=gis_ol_f2_'+map_id+'_]').val(''); for (var t=0;t<GIS_ol_maps[map_id].layers_def.length;t++) { if (typeof(GIS_ol_maps[map_id].layers[t].getSource().getParams().cql_filter)!='undefined') { delete GIS_ol_maps[map_id].layers[t].getSource().getParams().cql_filter; GIS_ol_maps[map_id].layers[t].getSource().updateParams(); } } }};